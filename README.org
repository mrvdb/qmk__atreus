* Custom qmk firmware for [[https://shop.keyboard.io/collections/keyboardio-atreus][keyboard.io model Atreus]]

I build the qmk firmware in two ways:

1. Using a github action workflo which takes  =atreus.json= and builds binary firmware on each commit.
2. A script (=build=) which uses a GUIX container to build it locally using qmk

The rational for having two ways of building the firmware is to provide a backup and reference for the local setup as it is quite fragile still on my POWER9 powerpc64le machine. Another reason is verification, is the firmware built locally the same as the one built remotely.

** Ad 1. Github action workflow

doc: https://docs.qmk.fm/#/newbs_building_firmware_workflow

Roughly how it works:

- use https://config.qmk.fm/ to load atreus.json

- adjust what is needed, possibly compile firmware and flash until done

- download the updated json file in this repo

- commit and push to github, github workflow will build the firmware and produce it as artifact


** Ad 2. GUIX container based local build

The =[[/build][build]]= shell script spawns a GUIX shell and builds firmware locally using =manifest.scm=

Obviously, you'll need a working GUIX installation for this to be useful.

** Implemented features

Layers defined in the layout:

- Layer 0 :: Base layer
- Layer 1 :: Number keys, navigation and bracketing
- Layer 2 :: Function layer, macros
- Layer 3 :: Specials and dangerous key combinations

[[file:res/layout.png]]

Features implemented:
- numeric keys are autoshifted; saves awkward key combinations.
- leader configuration for =KC_APP= is defined, but not used. Not entirely sure how I want to use it yet.
- =Shift-(= and =Shift-)= are overridden to give '<' and '>' so I can have a logical bracketing group of 4 keys in Layer 1.

** TODO-list
*** TODO Make C-M-a easier to type
:PROPERTIES:
:CREATED:  [2022-12-23 Fri 18:19]
:END:
I use this a lot in lisp programming, but not sure if this should be an emacs solution or a firmware/layout solution

The right alt key is actually =alt-gr= so that maps to =C-ä= instead of =C-M-a=

Possible solutions:
- map =C-ä= to the same function as =C-M-a=
- remap keys in layout somehow

*** TODO Move reset-keyboard into code instead of keymap
:PROPERTIES:
:CREATED:  [2022-12-24 Sat 17:23]
:END:

Feels more in place in firmware code than in the keymapping, although factually it is exactly the same.
If however put in code, it's harder to discover (if using the json keymap)

*** TODO Fine tune tap-hold configuration
:PROPERTIES:
:CREATED:  [2022-12-24 Sat 17:25]
:END:

Notably the Z and / key which double up as left and right shift modifier when hold have some issues:

- +when used with other modifiers like Layer modifiers the order in which the modifiers are typed seems to be important, which sucks+
  Solved with transparent SHIFT keys in layer 1 for the most part.

  https://docs.qmk.fm/#/tap_hold has lots of informatieon.

-
  afjdk;adfjk;

*** TODO Include some images/ascii art of the layers layout
:PROPERTIES:
:CREATED:  [2022-12-25 Sun 11:02]
:END:

*** TODO Enter hold sometimes fails (timing?)
:PROPERTIES:
:CREATED:  [2022-12-25 Sun 11:06]
:END:
I use a tap/hold combination on the return/enter key. This sometimes fails when typing fast, leading not to the 'hold' key that was intended, but to a return being emitted. These are expensive mishaps, so perhaps adjust timing or remap.

Mostly happens with the '=' key.
